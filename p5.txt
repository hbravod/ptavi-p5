 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 954 paquetes
 ** ¿Cuánto tiempo dura la captura? 56.149345 s
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
La IP de la máquina es 192.168.1.34
Es privada porque empieza por 192
3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real? UDP tiene mayor porcentaje de paquetes (96.2%). Sí, porque UDP se encarga del audio y del vídeo.
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?¿Cuáles son señal y cuáles ruidos?
RTP, Internet Control Message Protocol, Address Resolution Protocol, SIP, IP

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos? Los envíos comienzan en el segundo 7.343770 (46) y el último envío es en el segundo 55.859934 (953)
 ** Y los paquetes con RTP, ¿cuándo se envían?
Los envíos RTP empiezan en el segundo 17.169770 (111) y el último envío es en el segundo 38.119177 (919)


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas? DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga? 80.58.61.250
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres? 86.64.162.35
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa? NO


6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo? http://ekiga.net/ip/
 ** ¿Qué user agent (UA) la está pidiendo? La máquina con IP 192.168.1.34
 ** ¿Qué devuelve el servidor? HTTP/1.1 200 OK
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor? Recibimos la IP 212.128.255.11, que es la IP de mi máquina.


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
 ** ¿Estamos tras un NAT?
Porque te indica si estás tras un NAT y el tipo de NAT que estás usando.
Sí, porque ekiga te ve con una IP pública mientras que nosotros tenemos una IP privada.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar? 86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP? 5060
 ** ¿Qué método SIP utiliza el UA para registrarse? REGISTER
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA? SUBSCRIBE, INVITE, ACK, BYE, OPTIONS, CANCEL, NOTIFY, REFER; MESSAGE.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento? No
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no? Porque en el paquete 52 recibimos un "200 OK"
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio) El tamaño de los paquetes cambia porque en el segundo intento se añade a la cabecera un campo llamado "Authorization" con la conversión del nonce.
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades. 3600 segundos.


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP? Sí, "gregorio Robles" sip:grex@ekiga.net
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está? El SDP
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes? No, porque salta el mensaje "407 Proxy Authentication Required"
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
El tamaño es mayor, al igual que con los "register", debido a que inlcuye el nonce.

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos? RTP, para enviar en tiempo real
 ** ¿Cuál es el tamaño de paquete de los mismos? 214bytes
 ** ¿Se utilizan bits de padding? No
 ** ¿Cuál es la periodicidad de los paquetes que se envían?Enviamos 80000 bytes, tenemos un TimeStamp de 160, haciendo regla de tres -> 1s -> 8000; xs -> 160; x = 0.02 segundos
 ** ¿Cuántos bits/segundo estamos enviando? 64kbs. Nuestros mensajes envían 160 bytes y muestreamos a 8000 bytes



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué? 2, uno de audio(G.711A) y otro de vídeo(h.261)
 ** ¿Cuántos paquetes se pierden? No se pierde ninguno
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta? Max.Delta(vídeo) = 1290.479 ms y Max.Delta(audio) = 1290.444 ms. El tiempo que pasa entre un paquete y otro.
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad? VIDEO valor medio = 153.24ms, valor máximo = 183.096 ms || AUDIO valor medio = 42.5 ms, valor máximo = 119.635 ms.


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado? Ambos valen 0.
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado? Sí, ya que el valor de Marker = True. El paquete es el 113.
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál? Hasta el 247
 ** ¿A qué se debe el cambio tan brusco del jitter? Hay demasiado flujo en la red
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué? No es comparable porque el Jitter es una media de todas las deltas anteriores (promedio) y el otro es un valor puntual
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
Si aumenta el valor de Delta, el valor del Jitter aumentará y el valor de la Delta del siguiente paquete disminuirá.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación? 24,80289 segundos.
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs? Hay SSRCs para cada flujo
Vídeo = 0X43306582
Audio = 0XBF4AFD37
No hay CSRCs

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza? BYE
 ** ¿En qué trama(s)? 924, 925, 927 y 933
 ** ¿Por qué crees que se envía varias veces?
Porque no puede acceder al puerto correspondiente.

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER? Porque se da de baja en el servicio
 ** ¿En qué trama sucede esto? En la 950 y 952
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)? Envía el Expire con valor 0.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué? No porque en la universidad tenemos
una IP pública mientras que en la captura anterior la IP era privada.
 ** ¿Son diferentes el registro y la descripción de la sesión?
Sí, en este caso necesitamos enviar la comprobación (nonce) para registrarnos.

18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos? Hay dos flujos por usuario en la llamada (audio y vídeo)
 ** ¿Cuál es su periodicidad?
Enviamos 80000 bytes, tenemos un TimeStamp de 320, haciendo regla de tres -> 1s -> 8000; xs -> 320; x = 0.04s
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
Max Delta: 33.65 s Jitter Medio: 0.01 ms Jitter máx: 1.06 ms
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
Sí, se puede reproducir con el reproductor dentro de RTP Streams
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net? El servicio que ofrece es Music on Hold.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
